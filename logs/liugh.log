2019-08-02 14:56:32,847 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT sms_verify_id AS smsVerifyId,sms_id AS smsId,mobile,sms_verify AS smsVerify,sms_type AS smsType,create_time AS createTime FROM tb_sms_verify WHERE (mobile=? and sms_verify=? and sms_type = ?) ORDER BY create_time DESC 
2019-08-02 14:56:32,862 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15854524156(String), null, 2(Integer)
2019-08-02 14:56:32,872 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 14:56:33,076 [WARN] [http-nio-8081-exec-1] org.apache.commons.httpclient.HttpMethodBase [HttpMethodBase.java : 682] Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2019-08-02 14:56:33,086 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user ( user_no, mobile, user_name, nick_name, pass_word, create_time ) VALUES ( ?, ?, ?, ?, ?, ? ) 
2019-08-02 14:56:33,089 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-885706788871418b80653327e0fa1ff8(String), 15854524156(String), 按人头(String), 苍浩壤(String), $2a$10$U3o.LG6MS9a8uH.lapXuIeGhzdaIjN756Z6WEI/APJ9I0s8D8o9i6(String), 2019-08-02 14:56:33.082(Timestamp)
2019-08-02 14:56:33,110 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 14:56:33,261 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user_to_role ( user_no, role_code ) VALUES ( ?, ? ) 
2019-08-02 14:56:33,263 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-885706788871418b80653327e0fa1ff8(String), user(String)
2019-08-02 14:56:33,284 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 14:56:33,314 [INFO] [http-nio-8081-exec-1] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"普通用户开放注册接口","modelName":"Login","createTime":1564728992749,"ip":"0:0:0:0:0:0:0:1:58816","succeed":1,"action":"common-register","methodName":"commonRegister","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"rePassword\":\"*******\",\"mobile\":\"15854524156\",\"username\":\"按人头\"}"}
2019-08-02 14:56:33,325 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 14:56:33,326 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 普通用户开放注册接口(String), {"password":"*******","rePassword":"*******","mobile":"15854524156","username":"按人头"}(String), com.liugh.controller.LoginController(String), commonRegister(String), 0:0:0:0:0:0:0:1:58816(String), 1564728992749(Long), 1(Integer), Login(String), common-register(String)
2019-08-02 14:56:33,344 [DEBUG] [http-nio-8081-exec-1] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 14:57:31,903 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT sms_verify_id AS smsVerifyId,sms_id AS smsId,mobile,sms_verify AS smsVerify,sms_type AS smsType,create_time AS createTime FROM tb_sms_verify WHERE (mobile=? and sms_verify=? and sms_type = ?) ORDER BY create_time DESC 
2019-08-02 14:57:31,904 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15896324587(String), null, 2(Integer)
2019-08-02 14:57:31,913 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 14:57:32,089 [WARN] [http-nio-8081-exec-3] org.apache.commons.httpclient.HttpMethodBase [HttpMethodBase.java : 682] Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2019-08-02 14:57:32,091 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user ( user_no, mobile, user_name, nick_name, pass_word, create_time ) VALUES ( ?, ?, ?, ?, ?, ? ) 
2019-08-02 14:57:32,091 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-956d82cbba1b4eefad49084e09999408(String), 15896324587(String), 你是谁(String), 邱南晴(String), $2a$10$vxRDd92SwHDiQr7vNLFTb.kFH.JvI9xfRDnau2Bq..YIKkcnUmLle(String), 2019-08-02 14:57:32.09(Timestamp)
2019-08-02 14:57:32,112 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 14:57:32,124 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user_to_role ( user_no, role_code ) VALUES ( ?, ? ) 
2019-08-02 14:57:32,124 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-956d82cbba1b4eefad49084e09999408(String), user(String)
2019-08-02 14:57:32,143 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 14:57:32,173 [INFO] [http-nio-8081-exec-3] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"普通用户开放注册接口","modelName":"Login","createTime":1564729051902,"ip":"0:0:0:0:0:0:0:1:58816","succeed":1,"action":"common-register","methodName":"commonRegister","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"rePassword\":\"*******\",\"mobile\":\"15896324587\",\"username\":\"你是谁\"}"}
2019-08-02 14:57:32,181 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 14:57:32,182 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 普通用户开放注册接口(String), {"password":"*******","rePassword":"*******","mobile":"15896324587","username":"你是谁"}(String), com.liugh.controller.LoginController(String), commonRegister(String), 0:0:0:0:0:0:0:1:58816(String), 1564729051902(Long), 1(Integer), Login(String), common-register(String)
2019-08-02 14:57:32,200 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:04:13,104 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT sms_verify_id AS smsVerifyId,sms_id AS smsId,mobile,sms_verify AS smsVerify,sms_type AS smsType,create_time AS createTime FROM tb_sms_verify WHERE (mobile=? and sms_verify=? and sms_type = ?) ORDER BY create_time DESC 
2019-08-02 15:04:13,105 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15874513312(String), null, 2(Integer)
2019-08-02 15:04:13,114 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 15:04:13,314 [WARN] [http-nio-8081-exec-6] org.apache.commons.httpclient.HttpMethodBase [HttpMethodBase.java : 682] Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2019-08-02 15:04:13,316 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user ( user_no, mobile, user_name, nick_name, pass_word, create_time ) VALUES ( ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:04:13,317 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-121671eff32743ecb84738cbb032af43(String), 15874513312(String), 二胎(String), 资雅昶(String), $2a$10$6lllEn12RXwTV1MJ9XE7ROUGMkyKJtMhiXSWXQAZ19bzXGCsi4pRq(String), 2019-08-02 15:04:13.315(Timestamp)
2019-08-02 15:04:13,337 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:04:13,359 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user_to_role ( user_no, role_code ) VALUES ( ?, ? ) 
2019-08-02 15:04:13,360 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-121671eff32743ecb84738cbb032af43(String), user(String)
2019-08-02 15:04:13,379 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:04:13,409 [INFO] [http-nio-8081-exec-6] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"普通用户开放注册接口","modelName":"Login","createTime":1564729453094,"ip":"0:0:0:0:0:0:0:1:59452","succeed":1,"action":"common-register","methodName":"commonRegister","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"rePassword\":\"*******\",\"mobile\":\"15874513312\",\"username\":\"二胎\"}"}
2019-08-02 15:04:13,419 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:04:13,420 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 普通用户开放注册接口(String), {"password":"*******","rePassword":"*******","mobile":"15874513312","username":"二胎"}(String), com.liugh.controller.LoginController(String), commonRegister(String), 0:0:0:0:0:0:0:1:59452(String), 1564729453094(Long), 1(Integer), Login(String), common-register(String)
2019-08-02 15:04:13,437 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:33:10,283 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT sms_verify_id AS smsVerifyId,sms_id AS smsId,mobile,sms_verify AS smsVerify,sms_type AS smsType,create_time AS createTime FROM tb_sms_verify WHERE (mobile=? and sms_verify=? and sms_type = ?) ORDER BY create_time DESC 
2019-08-02 15:33:10,284 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15623415896(String), null, 2(Integer)
2019-08-02 15:33:10,294 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 15:33:10,479 [WARN] [http-nio-8081-exec-9] org.apache.commons.httpclient.HttpMethodBase [HttpMethodBase.java : 682] Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2019-08-02 15:33:10,480 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user ( user_no, mobile, user_name, nick_name, pass_word, create_time ) VALUES ( ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:33:10,481 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-f434eb17367f42c1bc8b5c7ad5a641a8(String), 15623415896(String), 的服务而(String), 练若云(String), $2a$10$2ONBRkzvq1xFMFhyfCra2OLLrJKwcMzGL2afupbCpCykfjVukWjPy(String), 2019-08-02 15:33:10.48(Timestamp)
2019-08-02 15:33:10,500 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:33:10,511 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user_to_role ( user_no, role_code ) VALUES ( ?, ? ) 
2019-08-02 15:33:10,512 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-f434eb17367f42c1bc8b5c7ad5a641a8(String), user(String)
2019-08-02 15:33:10,531 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:33:10,562 [INFO] [http-nio-8081-exec-9] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"普通用户开放注册接口","modelName":"Login","createTime":1564731188279,"ip":"0:0:0:0:0:0:0:1:51552","succeed":1,"action":"common-register","methodName":"commonRegister","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"rePassword\":\"*******\",\"mobile\":\"15623415896\",\"username\":\"的服务而\"}"}
2019-08-02 15:33:10,571 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:33:10,572 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 普通用户开放注册接口(String), {"password":"*******","rePassword":"*******","mobile":"15623415896","username":"的服务而"}(String), com.liugh.controller.LoginController(String), commonRegister(String), 0:0:0:0:0:0:0:1:51552(String), 1564731188279(Long), 1(Integer), Login(String), common-register(String)
2019-08-02 15:33:10,590 [DEBUG] [http-nio-8081-exec-9] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:33:10,610 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT sms_verify_id AS smsVerifyId,sms_id AS smsId,mobile,sms_verify AS smsVerify,sms_type AS smsType,create_time AS createTime FROM tb_sms_verify WHERE (mobile=? and sms_verify=? and sms_type = ?) ORDER BY create_time DESC 
2019-08-02 15:33:10,611 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15623415896(String), null, 2(Integer)
2019-08-02 15:33:10,621 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.SmsVerifyMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 15:33:10,802 [WARN] [http-nio-8081-exec-10] org.apache.commons.httpclient.HttpMethodBase [HttpMethodBase.java : 682] Going to buffer response body of large or unknown size. Using getResponseBodyAsStream instead is recommended.
2019-08-02 15:33:10,810 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user ( user_no, mobile, user_name, nick_name, pass_word, create_time ) VALUES ( ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:33:10,811 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-3cb2409c5caf4b5e82ec746dfb451bd3(String), 15623415896(String), 的服务而(String), 甫婉慧(String), $2a$10$mbZqLZagcvjz4GuMnpoxT.h2GxHP9Cz8wT3j7xqKfUSGrCYrzpQoq(String), 2019-08-02 15:33:10.807(Timestamp)
2019-08-02 15:33:10,833 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:33:10,842 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_user_to_role ( user_no, role_code ) VALUES ( ?, ? ) 
2019-08-02 15:33:10,843 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: user-3cb2409c5caf4b5e82ec746dfb451bd3(String), user(String)
2019-08-02 15:33:10,860 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserToRoleMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:33:10,888 [INFO] [http-nio-8081-exec-10] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"普通用户开放注册接口","modelName":"Login","createTime":1564731190609,"ip":"0:0:0:0:0:0:0:1:51564","succeed":1,"action":"common-register","methodName":"commonRegister","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"rePassword\":\"*******\",\"mobile\":\"15623415896\",\"username\":\"的服务而\"}"}
2019-08-02 15:33:10,898 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:33:10,900 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 普通用户开放注册接口(String), {"password":"*******","rePassword":"*******","mobile":"15623415896","username":"的服务而"}(String), com.liugh.controller.LoginController(String), commonRegister(String), 0:0:0:0:0:0:0:1:51564(String), 1564731190609(Long), 1(Integer), Login(String), common-register(String)
2019-08-02 15:33:10,926 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:36:50,573 [DEBUG] [http-nio-8081-exec-4] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT user_no AS userNo,mobile,user_name AS username,nick_name AS nickname,pass_word AS `password`,unit,create_time AS createTime,avatar,`status`,job,invite_user_code AS inviteUserCode,user_code AS userCode,company_id AS companyId,acquire_stars AS acquireStars,nameauth_flag AS nameauthFlag,balance FROM tb_user WHERE (mobile = ? and status = 1) 
2019-08-02 15:36:50,579 [DEBUG] [http-nio-8081-exec-4] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15874513312(String)
2019-08-02 15:36:50,589 [DEBUG] [http-nio-8081-exec-4] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 15:36:50,591 [INFO] [http-nio-8081-exec-4] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"前台密码登录接口","modelName":"Login","createTime":1564731410562,"ip":"0:0:0:0:0:0:0:1:52119","succeed":2,"action":"SignIn","methodName":"login","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"mobile\":\"15874513312\"}","message":"用户名或密码错误 &#10; com.liugh.service.impl.UserServiceImpl.checkMobileAndPasswd(UserServiceImpl.java:153) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) &#10; org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) &#10; org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; com.liugh.controller.LoginController.login(LoginController.java:44) &#10; com.liugh.controller.LoginController$$FastClassBySpringCGLIB$$63a1b1d5.invoke(<generated>) &#10; org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) &#10; org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:97) &#10; com.liugh.aspect.RecordLogAspect.execute(RecordLogAspect.java:56) &#10; com.liugh.aspect.RecordLogAspect.doHandlerAspect(RecordLogAspect.java:37) &#10; com.liugh.config.ControllerAspect.validationPoint(ControllerAspect.java:50) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) &#10; org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) &#10; com.liugh.controller.LoginController$$EnhancerBySpringCGLIB$$4e6fab9e.login(<generated>) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) &#10; org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) &#10; org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) &#10; org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) &#10; org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) &#10; org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) &#10; org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) &#10; org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:648) &#10; org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:729) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) &#10; org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) &#10; org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) &#10; org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) &#10; org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) &#10; org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) &#10; org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) &#10; org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) &#10; org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) &#10; org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) &#10; org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) &#10; org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) &#10; org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) &#10; org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) &#10; org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) &#10; org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) &#10; org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) &#10; java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) &#10; java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) &#10; org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) &#10; java.lang.Thread.run(Thread.java:748) &#10; "}
2019-08-02 15:36:50,604 [DEBUG] [http-nio-8081-exec-4] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, message, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:36:50,606 [DEBUG] [http-nio-8081-exec-4] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 前台密码登录接口(String), {"password":"*******","mobile":"15874513312"}(String), com.liugh.controller.LoginController(String), login(String), 0:0:0:0:0:0:0:1:52119(String), 1564731410562(Long), 2(Integer), 用户名或密码错误 &#10; com.liugh.service.impl.UserServiceImpl.checkMobileAndPasswd(UserServiceImpl.java:153) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) &#10; org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) &#10; org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; com.liugh.controller.LoginController.login(LoginController.java:44) &#10; com.liugh.controller.LoginController$$FastClassBySpringCGLIB$$63a1b1d5.invoke(<generated>) &#10; org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) &#10; org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:97) &#10; com.liugh.aspect.RecordLogAspect.execute(RecordLogAspect.java:56) &#10; com.liugh.aspect.RecordLogAspect.doHandlerAspect(RecordLogAspect.java:37) &#10; com.liugh.config.ControllerAspect.validationPoint(ControllerAspect.java:50) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) &#10; org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) &#10; com.liugh.controller.LoginController$$EnhancerBySpringCGLIB$$4e6fab9e.login(<generated>) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) &#10; org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) &#10; org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) &#10; org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) &#10; org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) &#10; org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) &#10; org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) &#10; org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:648) &#10; org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:729) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) &#10; org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) &#10; org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) &#10; org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) &#10; org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) &#10; org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) &#10; org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) &#10; org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) &#10; org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) &#10; org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) &#10; org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) &#10; org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) &#10; org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) &#10; org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) &#10; org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) &#10; org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) &#10; org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) &#10; java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) &#10; java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) &#10; org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) &#10; java.lang.Thread.run(Thread.java:748) &#10; (String), Login(String), SignIn(String)
2019-08-02 15:36:50,631 [DEBUG] [http-nio-8081-exec-4] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:36:50,666 [INFO] [http-nio-8081-exec-4] com.liugh.config.AllControllerAdvice [AllControllerAdvice.java : 82] 数据操作失败：用户名或密码错误
2019-08-02 15:37:05,911 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT user_no AS userNo,mobile,user_name AS username,nick_name AS nickname,pass_word AS `password`,unit,create_time AS createTime,avatar,`status`,job,invite_user_code AS inviteUserCode,user_code AS userCode,company_id AS companyId,acquire_stars AS acquireStars,nameauth_flag AS nameauthFlag,balance FROM tb_user WHERE (mobile = ? and status = 1) 
2019-08-02 15:37:05,912 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15874513312(String)
2019-08-02 15:37:05,922 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 15:37:05,923 [INFO] [http-nio-8081-exec-6] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"前台密码登录接口","modelName":"Login","createTime":1564731425911,"ip":"0:0:0:0:0:0:0:1:52119","succeed":2,"action":"SignIn","methodName":"login","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"mobile\":\"15874513312\"}","message":"用户名或密码错误 &#10; com.liugh.service.impl.UserServiceImpl.checkMobileAndPasswd(UserServiceImpl.java:153) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) &#10; org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) &#10; org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; com.liugh.controller.LoginController.login(LoginController.java:44) &#10; com.liugh.controller.LoginController$$FastClassBySpringCGLIB$$63a1b1d5.invoke(<generated>) &#10; org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) &#10; org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:97) &#10; com.liugh.aspect.RecordLogAspect.execute(RecordLogAspect.java:56) &#10; com.liugh.aspect.RecordLogAspect.doHandlerAspect(RecordLogAspect.java:37) &#10; com.liugh.config.ControllerAspect.validationPoint(ControllerAspect.java:50) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) &#10; org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) &#10; com.liugh.controller.LoginController$$EnhancerBySpringCGLIB$$4e6fab9e.login(<generated>) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) &#10; org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) &#10; org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) &#10; org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) &#10; org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) &#10; org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) &#10; org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) &#10; org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:648) &#10; org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:729) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) &#10; org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) &#10; org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) &#10; org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) &#10; org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) &#10; org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) &#10; org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) &#10; org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) &#10; org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) &#10; org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) &#10; org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) &#10; org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) &#10; org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) &#10; org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) &#10; org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) &#10; org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) &#10; org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) &#10; java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) &#10; java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) &#10; org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) &#10; java.lang.Thread.run(Thread.java:748) &#10; "}
2019-08-02 15:37:05,934 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, message, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:37:05,935 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 前台密码登录接口(String), {"password":"*******","mobile":"15874513312"}(String), com.liugh.controller.LoginController(String), login(String), 0:0:0:0:0:0:0:1:52119(String), 1564731425911(Long), 2(Integer), 用户名或密码错误 &#10; com.liugh.service.impl.UserServiceImpl.checkMobileAndPasswd(UserServiceImpl.java:153) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) &#10; org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) &#10; org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; com.liugh.controller.LoginController.login(LoginController.java:44) &#10; com.liugh.controller.LoginController$$FastClassBySpringCGLIB$$63a1b1d5.invoke(<generated>) &#10; org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) &#10; org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:97) &#10; com.liugh.aspect.RecordLogAspect.execute(RecordLogAspect.java:56) &#10; com.liugh.aspect.RecordLogAspect.doHandlerAspect(RecordLogAspect.java:37) &#10; com.liugh.config.ControllerAspect.validationPoint(ControllerAspect.java:50) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) &#10; org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) &#10; com.liugh.controller.LoginController$$EnhancerBySpringCGLIB$$4e6fab9e.login(<generated>) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) &#10; org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) &#10; org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) &#10; org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) &#10; org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) &#10; org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) &#10; org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) &#10; org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:648) &#10; org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:729) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) &#10; org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) &#10; org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) &#10; org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) &#10; org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) &#10; org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) &#10; org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) &#10; org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) &#10; org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) &#10; org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) &#10; org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) &#10; org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) &#10; org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) &#10; org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) &#10; org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) &#10; org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) &#10; org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) &#10; java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) &#10; java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) &#10; org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) &#10; java.lang.Thread.run(Thread.java:748) &#10; (String), Login(String), SignIn(String)
2019-08-02 15:37:05,957 [DEBUG] [http-nio-8081-exec-6] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:37:06,287 [INFO] [http-nio-8081-exec-6] com.liugh.config.AllControllerAdvice [AllControllerAdvice.java : 82] 数据操作失败：用户名或密码错误
2019-08-02 15:37:34,061 [DEBUG] [http-nio-8081-exec-8] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT user_no AS userNo,mobile,user_name AS username,nick_name AS nickname,pass_word AS `password`,unit,create_time AS createTime,avatar,`status`,job,invite_user_code AS inviteUserCode,user_code AS userCode,company_id AS companyId,acquire_stars AS acquireStars,nameauth_flag AS nameauthFlag,balance FROM tb_user WHERE (mobile = ? and status = 1) 
2019-08-02 15:37:34,062 [DEBUG] [http-nio-8081-exec-8] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15874513312(String)
2019-08-02 15:37:34,072 [DEBUG] [http-nio-8081-exec-8] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 15:37:34,073 [INFO] [http-nio-8081-exec-8] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"前台密码登录接口","modelName":"Login","createTime":1564731454061,"ip":"0:0:0:0:0:0:0:1:52119","succeed":2,"action":"SignIn","methodName":"login","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"mobile\":\"15874513312\"}","message":"用户名或密码错误 &#10; com.liugh.service.impl.UserServiceImpl.checkMobileAndPasswd(UserServiceImpl.java:153) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) &#10; org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) &#10; org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; com.liugh.controller.LoginController.login(LoginController.java:44) &#10; com.liugh.controller.LoginController$$FastClassBySpringCGLIB$$63a1b1d5.invoke(<generated>) &#10; org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) &#10; org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:97) &#10; com.liugh.aspect.RecordLogAspect.execute(RecordLogAspect.java:56) &#10; com.liugh.aspect.RecordLogAspect.doHandlerAspect(RecordLogAspect.java:37) &#10; com.liugh.config.ControllerAspect.validationPoint(ControllerAspect.java:50) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) &#10; org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) &#10; com.liugh.controller.LoginController$$EnhancerBySpringCGLIB$$4e6fab9e.login(<generated>) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) &#10; org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) &#10; org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) &#10; org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) &#10; org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) &#10; org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) &#10; org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) &#10; org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:648) &#10; org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:729) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) &#10; org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) &#10; org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) &#10; org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) &#10; org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) &#10; org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) &#10; org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) &#10; org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) &#10; org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) &#10; org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) &#10; org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) &#10; org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) &#10; org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) &#10; org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) &#10; org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) &#10; org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) &#10; org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) &#10; java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) &#10; java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) &#10; org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) &#10; java.lang.Thread.run(Thread.java:748) &#10; "}
2019-08-02 15:37:34,086 [DEBUG] [http-nio-8081-exec-8] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, message, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:37:34,088 [DEBUG] [http-nio-8081-exec-8] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 前台密码登录接口(String), {"password":"*******","mobile":"15874513312"}(String), com.liugh.controller.LoginController(String), login(String), 0:0:0:0:0:0:0:1:52119(String), 1564731454061(Long), 2(Integer), 用户名或密码错误 &#10; com.liugh.service.impl.UserServiceImpl.checkMobileAndPasswd(UserServiceImpl.java:153) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:207) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:333) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:190) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99) &#10; org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282) &#10; org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213) &#10; com.sun.proxy.$Proxy123.checkMobileAndPasswd(Unknown Source) &#10; com.liugh.controller.LoginController.login(LoginController.java:44) &#10; com.liugh.controller.LoginController$$FastClassBySpringCGLIB$$63a1b1d5.invoke(<generated>) &#10; org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) &#10; org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157) &#10; org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:97) &#10; com.liugh.aspect.RecordLogAspect.execute(RecordLogAspect.java:56) &#10; com.liugh.aspect.RecordLogAspect.doHandlerAspect(RecordLogAspect.java:37) &#10; com.liugh.config.ControllerAspect.validationPoint(ControllerAspect.java:50) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:629) &#10; org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:618) &#10; org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) &#10; org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) &#10; org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) &#10; com.liugh.controller.LoginController$$EnhancerBySpringCGLIB$$4e6fab9e.login(<generated>) &#10; sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) &#10; sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) &#10; sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) &#10; java.lang.reflect.Method.invoke(Method.java:498) &#10; org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) &#10; org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) &#10; org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) &#10; org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) &#10; org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) &#10; org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963) &#10; org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897) &#10; org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) &#10; org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:648) &#10; org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) &#10; javax.servlet.http.HttpServlet.service(HttpServlet.java:729) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61) &#10; org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108) &#10; org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365) &#10; org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90) &#10; org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83) &#10; org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387) &#10; org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362) &#10; org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) &#10; org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) &#10; org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192) &#10; org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165) &#10; org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) &#10; org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) &#10; org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474) &#10; org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) &#10; org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) &#10; org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) &#10; org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349) &#10; org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783) &#10; org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) &#10; org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798) &#10; org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434) &#10; org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) &#10; java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) &#10; java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) &#10; org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) &#10; java.lang.Thread.run(Thread.java:748) &#10; (String), Login(String), SignIn(String)
2019-08-02 15:37:34,181 [DEBUG] [http-nio-8081-exec-8] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:37:34,211 [INFO] [http-nio-8081-exec-8] com.liugh.config.AllControllerAdvice [AllControllerAdvice.java : 82] 数据操作失败：用户名或密码错误
2019-08-02 15:37:55,164 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT user_no AS userNo,mobile,user_name AS username,nick_name AS nickname,pass_word AS `password`,unit,create_time AS createTime,avatar,`status`,job,invite_user_code AS inviteUserCode,user_code AS userCode,company_id AS companyId,acquire_stars AS acquireStars,nameauth_flag AS nameauthFlag,balance FROM tb_user WHERE (mobile = ? and status = 1) 
2019-08-02 15:37:55,165 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15562555600(String)
2019-08-02 15:37:55,179 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 1
2019-08-02 15:37:55,241 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserToRoleMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT user_to_role_id AS userToRoleId,user_no AS userNo,role_code AS roleCode FROM tb_user_to_role WHERE (user_no=?) 
2019-08-02 15:37:55,242 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserToRoleMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: user-9e63c31a32e94b5b9bfb7661c8ae5ebb(String)
2019-08-02 15:37:55,252 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.UserToRoleMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 1
2019-08-02 15:37:55,283 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.MenuMapper.findMenuByRoleCode [BaseJdbcLogger.java : 159] ==>  Preparing: select m.* from tb_menu m LEFT JOIN tb_role_to_menu r on r.menu_code= m.menu_code WHERE 1 = 1 AND r.role_code = ? 
2019-08-02 15:37:55,286 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.MenuMapper.findMenuByRoleCode [BaseJdbcLogger.java : 159] ==> Parameters: user(String)
2019-08-02 15:37:55,296 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.MenuMapper.findMenuByRoleCode [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 15:37:55,298 [INFO] [http-nio-8081-exec-10] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"前台密码登录接口","modelName":"Login","createTime":1564731475163,"ip":"0:0:0:0:0:0:0:1:52119","succeed":1,"action":"SignIn","methodName":"login","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"mobile\":\"15562555600\"}"}
2019-08-02 15:37:55,308 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:37:55,308 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 前台密码登录接口(String), {"password":"*******","mobile":"15562555600"}(String), com.liugh.controller.LoginController(String), login(String), 0:0:0:0:0:0:0:1:52119(String), 1564731475163(Long), 1(Integer), Login(String), SignIn(String)
2019-08-02 15:37:55,327 [DEBUG] [http-nio-8081-exec-10] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
2019-08-02 15:42:09,968 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT user_no AS userNo,mobile,user_name AS username,nick_name AS nickname,pass_word AS `password`,unit,create_time AS createTime,avatar,`status`,job,invite_user_code AS inviteUserCode,user_code AS userCode,company_id AS companyId,acquire_stars AS acquireStars,nameauth_flag AS nameauthFlag,balance FROM tb_user WHERE (mobile = ? and status = 1) 
2019-08-02 15:42:09,969 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: 15562555600(String)
2019-08-02 15:42:09,980 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 1
2019-08-02 15:42:10,043 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserToRoleMapper.selectList [BaseJdbcLogger.java : 159] ==>  Preparing: SELECT user_to_role_id AS userToRoleId,user_no AS userNo,role_code AS roleCode FROM tb_user_to_role WHERE (user_no=?) 
2019-08-02 15:42:10,043 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserToRoleMapper.selectList [BaseJdbcLogger.java : 159] ==> Parameters: user-9e63c31a32e94b5b9bfb7661c8ae5ebb(String)
2019-08-02 15:42:10,054 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.UserToRoleMapper.selectList [BaseJdbcLogger.java : 159] <==      Total: 1
2019-08-02 15:42:10,057 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.MenuMapper.findMenuByRoleCode [BaseJdbcLogger.java : 159] ==>  Preparing: select m.* from tb_menu m LEFT JOIN tb_role_to_menu r on r.menu_code= m.menu_code WHERE 1 = 1 AND r.role_code = ? 
2019-08-02 15:42:10,058 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.MenuMapper.findMenuByRoleCode [BaseJdbcLogger.java : 159] ==> Parameters: user(String)
2019-08-02 15:42:10,068 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.MenuMapper.findMenuByRoleCode [BaseJdbcLogger.java : 159] <==      Total: 0
2019-08-02 15:42:10,069 [INFO] [http-nio-8081-exec-3] com.liugh.aspect.RecordLogAspect [RecordLogAspect.java : 158] 执行方法信息:{"logDescription":"前台密码登录接口","modelName":"Login","createTime":1564731729960,"ip":"0:0:0:0:0:0:0:1:52923","succeed":1,"action":"SignIn","methodName":"login","className":"com.liugh.controller.LoginController","actionArgs":"{\"password\":\"*******\",\"mobile\":\"15562555600\"}"}
2019-08-02 15:42:10,078 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==>  Preparing: INSERT INTO tb_operation_log ( log_description, action_args, class_name, method_name, ip, create_time, succeed, model_name, `action` ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-08-02 15:42:10,079 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] ==> Parameters: 前台密码登录接口(String), {"password":"*******","mobile":"15562555600"}(String), com.liugh.controller.LoginController(String), login(String), 0:0:0:0:0:0:0:1:52923(String), 1564731729960(Long), 1(Integer), Login(String), SignIn(String)
2019-08-02 15:42:10,098 [DEBUG] [http-nio-8081-exec-3] com.liugh.mapper.OperationLogMapper.insert [BaseJdbcLogger.java : 159] <==    Updates: 1
